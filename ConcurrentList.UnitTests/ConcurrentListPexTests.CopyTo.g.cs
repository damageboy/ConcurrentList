// <copyright file="ConcurrentListPexTests.CopyTo.g.cs" company="Microsoft">Copyright © Microsoft 2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using NUnit.Framework;
using Microsoft.Pex.Framework.Generated;
using Microsoft.Pex.Framework;

namespace ConcurrentList.UnitTests
{
  public partial class ConcurrentListPexTests
  {
[Test]
[PexGeneratedBy(typeof(ConcurrentListPexTests))]
[ExpectedException(typeof(ArgumentNullException))]
public void CopyToThrowsArgumentNullException300()
{
    ConcurrentList<int> concurrentList;
    concurrentList = new ConcurrentList<int>();
    this.CopyTo<int>(concurrentList, (int[])null, 0);
}
[Test]
[PexGeneratedBy(typeof(ConcurrentListPexTests))]
public void CopyTo474()
{
    ConcurrentList<int> concurrentList;
    concurrentList = new ConcurrentList<int>();
    int[] ints = new int[0];
    this.CopyTo<int>(concurrentList, ints, 0);
    PexAssert.IsNotNull((object)concurrentList);
    PexAssert.AreEqual<int>(0, concurrentList.Count);
}
[Test]
[PexGeneratedBy(typeof(ConcurrentListPexTests))]
[ExpectedException(typeof(ArgumentException))]
public void CopyToThrowsArgumentException371()
{
    ConcurrentList<int> concurrentList;
    concurrentList = new ConcurrentList<int>();
    int[] ints = new int[0];
    this.CopyTo<int>(concurrentList, ints, int.MinValue);
}
  }
}
